// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.21.9
// source: gamestate.proto

package models

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type OngoingResearch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompleteAt int64             `protobuf:"varint,1,opt,name=complete_at,json=completeAt,proto3" json:"complete_at,omitempty"`
	Discovery  ResearchDiscovery `protobuf:"varint,2,opt,name=discovery,proto3,enum=pizzatribes.ResearchDiscovery" json:"discovery,omitempty"`
}

func (x *OngoingResearch) Reset() {
	*x = OngoingResearch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamestate_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OngoingResearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OngoingResearch) ProtoMessage() {}

func (x *OngoingResearch) ProtoReflect() protoreflect.Message {
	mi := &file_gamestate_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OngoingResearch.ProtoReflect.Descriptor instead.
func (*OngoingResearch) Descriptor() ([]byte, []int) {
	return file_gamestate_proto_rawDescGZIP(), []int{0}
}

func (x *OngoingResearch) GetCompleteAt() int64 {
	if x != nil {
		return x.CompleteAt
	}
	return 0
}

func (x *OngoingResearch) GetDiscovery() ResearchDiscovery {
	if x != nil {
		return x.Discovery
	}
	return ResearchDiscovery_WEBSITE
}

type Training struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompleteAt int64     `protobuf:"varint,1,opt,name=complete_at,json=completeAt,proto3" json:"complete_at,omitempty"`
	Education  Education `protobuf:"varint,2,opt,name=education,proto3,enum=pizzatribes.Education" json:"education,omitempty"`
	Amount     int32     `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *Training) Reset() {
	*x = Training{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamestate_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Training) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Training) ProtoMessage() {}

func (x *Training) ProtoReflect() protoreflect.Message {
	mi := &file_gamestate_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Training.ProtoReflect.Descriptor instead.
func (*Training) Descriptor() ([]byte, []int) {
	return file_gamestate_proto_rawDescGZIP(), []int{1}
}

func (x *Training) GetCompleteAt() int64 {
	if x != nil {
		return x.CompleteAt
	}
	return 0
}

func (x *Training) GetEducation() Education {
	if x != nil {
		return x.Education
	}
	return Education_CHEF
}

func (x *Training) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type Construction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompleteAt int64    `protobuf:"varint,1,opt,name=complete_at,json=completeAt,proto3" json:"complete_at,omitempty"`
	LotId      string   `protobuf:"bytes,2,opt,name=lotId,proto3" json:"lotId,omitempty"`
	Building   Building `protobuf:"varint,3,opt,name=building,proto3,enum=pizzatribes.Building" json:"building,omitempty"`
	Level      int32    `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`
	Razing     bool     `protobuf:"varint,5,opt,name=razing,proto3" json:"razing,omitempty"`
}

func (x *Construction) Reset() {
	*x = Construction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamestate_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Construction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Construction) ProtoMessage() {}

func (x *Construction) ProtoReflect() protoreflect.Message {
	mi := &file_gamestate_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Construction.ProtoReflect.Descriptor instead.
func (*Construction) Descriptor() ([]byte, []int) {
	return file_gamestate_proto_rawDescGZIP(), []int{2}
}

func (x *Construction) GetCompleteAt() int64 {
	if x != nil {
		return x.CompleteAt
	}
	return 0
}

func (x *Construction) GetLotId() string {
	if x != nil {
		return x.LotId
	}
	return ""
}

func (x *Construction) GetBuilding() Building {
	if x != nil {
		return x.Building
	}
	return Building_KITCHEN
}

func (x *Construction) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Construction) GetRazing() bool {
	if x != nil {
		return x.Razing
	}
	return false
}

type Travel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArrivalAt    int64 `protobuf:"varint,1,opt,name=arrival_at,json=arrivalAt,proto3" json:"arrival_at,omitempty"`
	DestinationX int32 `protobuf:"varint,2,opt,name=destinationX,proto3" json:"destinationX,omitempty"`
	DestinationY int32 `protobuf:"varint,3,opt,name=destinationY,proto3" json:"destinationY,omitempty"`
	Returning    bool  `protobuf:"varint,4,opt,name=returning,proto3" json:"returning,omitempty"`
	Thieves      int32 `protobuf:"varint,5,opt,name=thieves,proto3" json:"thieves,omitempty"`
	Coins        int64 `protobuf:"varint,6,opt,name=coins,proto3" json:"coins,omitempty"`
}

func (x *Travel) Reset() {
	*x = Travel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamestate_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Travel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Travel) ProtoMessage() {}

func (x *Travel) ProtoReflect() protoreflect.Message {
	mi := &file_gamestate_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Travel.ProtoReflect.Descriptor instead.
func (*Travel) Descriptor() ([]byte, []int) {
	return file_gamestate_proto_rawDescGZIP(), []int{3}
}

func (x *Travel) GetArrivalAt() int64 {
	if x != nil {
		return x.ArrivalAt
	}
	return 0
}

func (x *Travel) GetDestinationX() int32 {
	if x != nil {
		return x.DestinationX
	}
	return 0
}

func (x *Travel) GetDestinationY() int32 {
	if x != nil {
		return x.DestinationY
	}
	return 0
}

func (x *Travel) GetReturning() bool {
	if x != nil {
		return x.Returning
	}
	return false
}

func (x *Travel) GetThieves() int32 {
	if x != nil {
		return x.Thieves
	}
	return 0
}

func (x *Travel) GetCoins() int64 {
	if x != nil {
		return x.Coins
	}
	return 0
}

type Mouse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	IsEducated      bool             `protobuf:"varint,2,opt,name=isEducated,proto3" json:"isEducated,omitempty"`
	IsBeingEducated bool             `protobuf:"varint,3,opt,name=isBeingEducated,proto3" json:"isBeingEducated,omitempty"`
	Education       Education        `protobuf:"varint,4,opt,name=education,proto3,enum=pizzatribes.Education" json:"education,omitempty"`
	Appearance      *MouseAppearance `protobuf:"bytes,5,opt,name=appearance,proto3" json:"appearance,omitempty"`
}

func (x *Mouse) Reset() {
	*x = Mouse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamestate_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mouse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mouse) ProtoMessage() {}

func (x *Mouse) ProtoReflect() protoreflect.Message {
	mi := &file_gamestate_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mouse.ProtoReflect.Descriptor instead.
func (*Mouse) Descriptor() ([]byte, []int) {
	return file_gamestate_proto_rawDescGZIP(), []int{4}
}

func (x *Mouse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Mouse) GetIsEducated() bool {
	if x != nil {
		return x.IsEducated
	}
	return false
}

func (x *Mouse) GetIsBeingEducated() bool {
	if x != nil {
		return x.IsBeingEducated
	}
	return false
}

func (x *Mouse) GetEducation() Education {
	if x != nil {
		return x.Education
	}
	return Education_CHEF
}

func (x *Mouse) GetAppearance() *MouseAppearance {
	if x != nil {
		return x.Appearance
	}
	return nil
}

type QuestState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Opened        bool `protobuf:"varint,1,opt,name=opened,proto3" json:"opened,omitempty"`
	Completed     bool `protobuf:"varint,2,opt,name=completed,proto3" json:"completed,omitempty"`
	ClaimedReward bool `protobuf:"varint,3,opt,name=claimedReward,proto3" json:"claimedReward,omitempty"`
}

func (x *QuestState) Reset() {
	*x = QuestState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamestate_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestState) ProtoMessage() {}

func (x *QuestState) ProtoReflect() protoreflect.Message {
	mi := &file_gamestate_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestState.ProtoReflect.Descriptor instead.
func (*QuestState) Descriptor() ([]byte, []int) {
	return file_gamestate_proto_rawDescGZIP(), []int{5}
}

func (x *QuestState) GetOpened() bool {
	if x != nil {
		return x.Opened
	}
	return false
}

func (x *QuestState) GetCompleted() bool {
	if x != nil {
		return x.Completed
	}
	return false
}

func (x *QuestState) GetClaimedReward() bool {
	if x != nil {
		return x.ClaimedReward
	}
	return false
}

type GameState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resources         *GameState_Resources      `protobuf:"bytes,1,opt,name=resources,proto3" json:"resources,omitempty"`
	Lots              map[string]*GameState_Lot `protobuf:"bytes,2,rep,name=lots,proto3" json:"lots,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Timestamp         int64                     `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	TrainingQueue     []*Training               `protobuf:"bytes,5,rep,name=trainingQueue,proto3" json:"trainingQueue,omitempty"`
	ConstructionQueue []*Construction           `protobuf:"bytes,6,rep,name=constructionQueue,proto3" json:"constructionQueue,omitempty"`
	TownX             int32                     `protobuf:"varint,7,opt,name=townX,proto3" json:"townX,omitempty"`
	TownY             int32                     `protobuf:"varint,8,opt,name=townY,proto3" json:"townY,omitempty"`
	TravelQueue       []*Travel                 `protobuf:"bytes,9,rep,name=travelQueue,proto3" json:"travelQueue,omitempty"`
	Discoveries       []ResearchDiscovery       `protobuf:"varint,10,rep,packed,name=discoveries,proto3,enum=pizzatribes.ResearchDiscovery" json:"discoveries,omitempty"`
	ResearchQueue     []*OngoingResearch        `protobuf:"bytes,11,rep,name=researchQueue,proto3" json:"researchQueue,omitempty"`
	Mice              map[string]*Mouse         `protobuf:"bytes,12,rep,name=mice,proto3" json:"mice,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Quests            map[string]*QuestState    `protobuf:"bytes,13,rep,name=quests,proto3" json:"quests,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	AmbassadorMouseId string                    `protobuf:"bytes,14,opt,name=ambassadorMouseId,proto3" json:"ambassadorMouseId,omitempty"`
	PizzaPrice        int32                     `protobuf:"varint,15,opt,name=pizzaPrice,proto3" json:"pizzaPrice,omitempty"`
	GeniusFlashes     int32                     `protobuf:"varint,16,opt,name=geniusFlashes,proto3" json:"geniusFlashes,omitempty"`
	AppearanceParts   []string                  `protobuf:"bytes,17,rep,name=appearanceParts,proto3" json:"appearanceParts,omitempty"`
}

func (x *GameState) Reset() {
	*x = GameState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamestate_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameState) ProtoMessage() {}

func (x *GameState) ProtoReflect() protoreflect.Message {
	mi := &file_gamestate_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameState.ProtoReflect.Descriptor instead.
func (*GameState) Descriptor() ([]byte, []int) {
	return file_gamestate_proto_rawDescGZIP(), []int{6}
}

func (x *GameState) GetResources() *GameState_Resources {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *GameState) GetLots() map[string]*GameState_Lot {
	if x != nil {
		return x.Lots
	}
	return nil
}

func (x *GameState) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *GameState) GetTrainingQueue() []*Training {
	if x != nil {
		return x.TrainingQueue
	}
	return nil
}

func (x *GameState) GetConstructionQueue() []*Construction {
	if x != nil {
		return x.ConstructionQueue
	}
	return nil
}

func (x *GameState) GetTownX() int32 {
	if x != nil {
		return x.TownX
	}
	return 0
}

func (x *GameState) GetTownY() int32 {
	if x != nil {
		return x.TownY
	}
	return 0
}

func (x *GameState) GetTravelQueue() []*Travel {
	if x != nil {
		return x.TravelQueue
	}
	return nil
}

func (x *GameState) GetDiscoveries() []ResearchDiscovery {
	if x != nil {
		return x.Discoveries
	}
	return nil
}

func (x *GameState) GetResearchQueue() []*OngoingResearch {
	if x != nil {
		return x.ResearchQueue
	}
	return nil
}

func (x *GameState) GetMice() map[string]*Mouse {
	if x != nil {
		return x.Mice
	}
	return nil
}

func (x *GameState) GetQuests() map[string]*QuestState {
	if x != nil {
		return x.Quests
	}
	return nil
}

func (x *GameState) GetAmbassadorMouseId() string {
	if x != nil {
		return x.AmbassadorMouseId
	}
	return ""
}

func (x *GameState) GetPizzaPrice() int32 {
	if x != nil {
		return x.PizzaPrice
	}
	return 0
}

func (x *GameState) GetGeniusFlashes() int32 {
	if x != nil {
		return x.GeniusFlashes
	}
	return 0
}

func (x *GameState) GetAppearanceParts() []string {
	if x != nil {
		return x.AppearanceParts
	}
	return nil
}

type PatchMask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paths []string `protobuf:"bytes,1,rep,name=paths,proto3" json:"paths,omitempty"`
}

func (x *PatchMask) Reset() {
	*x = PatchMask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamestate_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchMask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchMask) ProtoMessage() {}

func (x *PatchMask) ProtoReflect() protoreflect.Message {
	mi := &file_gamestate_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchMask.ProtoReflect.Descriptor instead.
func (*PatchMask) Descriptor() ([]byte, []int) {
	return file_gamestate_proto_rawDescGZIP(), []int{7}
}

func (x *PatchMask) GetPaths() []string {
	if x != nil {
		return x.Paths
	}
	return nil
}

type GameStatePatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameState *GameState `protobuf:"bytes,1,opt,name=gameState,proto3" json:"gameState,omitempty"`
	PatchMask *PatchMask `protobuf:"bytes,2,opt,name=patchMask,proto3" json:"patchMask,omitempty"`
}

func (x *GameStatePatch) Reset() {
	*x = GameStatePatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamestate_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameStatePatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameStatePatch) ProtoMessage() {}

func (x *GameStatePatch) ProtoReflect() protoreflect.Message {
	mi := &file_gamestate_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameStatePatch.ProtoReflect.Descriptor instead.
func (*GameStatePatch) Descriptor() ([]byte, []int) {
	return file_gamestate_proto_rawDescGZIP(), []int{8}
}

func (x *GameStatePatch) GetGameState() *GameState {
	if x != nil {
		return x.GameState
	}
	return nil
}

func (x *GameStatePatch) GetPatchMask() *PatchMask {
	if x != nil {
		return x.PatchMask
	}
	return nil
}

type GameState_Resources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coins  int32 `protobuf:"varint,1,opt,name=coins,proto3" json:"coins,omitempty"`
	Pizzas int32 `protobuf:"varint,2,opt,name=pizzas,proto3" json:"pizzas,omitempty"`
}

func (x *GameState_Resources) Reset() {
	*x = GameState_Resources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamestate_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameState_Resources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameState_Resources) ProtoMessage() {}

func (x *GameState_Resources) ProtoReflect() protoreflect.Message {
	mi := &file_gamestate_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameState_Resources.ProtoReflect.Descriptor instead.
func (*GameState_Resources) Descriptor() ([]byte, []int) {
	return file_gamestate_proto_rawDescGZIP(), []int{6, 0}
}

func (x *GameState_Resources) GetCoins() int32 {
	if x != nil {
		return x.Coins
	}
	return 0
}

func (x *GameState_Resources) GetPizzas() int32 {
	if x != nil {
		return x.Pizzas
	}
	return 0
}

type GameState_Lot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Building Building `protobuf:"varint,1,opt,name=building,proto3,enum=pizzatribes.Building" json:"building,omitempty"`
	TappedAt int64    `protobuf:"varint,2,opt,name=tapped_at,json=tappedAt,proto3" json:"tapped_at,omitempty"`
	Level    int32    `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`
	Taps     int32    `protobuf:"varint,4,opt,name=taps,proto3" json:"taps,omitempty"`
	Streak   int32    `protobuf:"varint,5,opt,name=streak,proto3" json:"streak,omitempty"`
}

func (x *GameState_Lot) Reset() {
	*x = GameState_Lot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamestate_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameState_Lot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameState_Lot) ProtoMessage() {}

func (x *GameState_Lot) ProtoReflect() protoreflect.Message {
	mi := &file_gamestate_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameState_Lot.ProtoReflect.Descriptor instead.
func (*GameState_Lot) Descriptor() ([]byte, []int) {
	return file_gamestate_proto_rawDescGZIP(), []int{6, 1}
}

func (x *GameState_Lot) GetBuilding() Building {
	if x != nil {
		return x.Building
	}
	return Building_KITCHEN
}

func (x *GameState_Lot) GetTappedAt() int64 {
	if x != nil {
		return x.TappedAt
	}
	return 0
}

func (x *GameState_Lot) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *GameState_Lot) GetTaps() int32 {
	if x != nil {
		return x.Taps
	}
	return 0
}

func (x *GameState_Lot) GetStreak() int32 {
	if x != nil {
		return x.Streak
	}
	return 0
}

var File_gamestate_proto protoreflect.FileDescriptor

var file_gamestate_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0b, 0x70, 0x69, 0x7a, 0x7a, 0x61, 0x74, 0x72, 0x69, 0x62, 0x65, 0x73, 0x1a, 0x0f,
	0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0e, 0x72, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x10, 0x61, 0x70, 0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x70, 0x0a, 0x0f, 0x4f, 0x6e, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x74, 0x12, 0x3c, 0x0a, 0x09, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x70, 0x69, 0x7a, 0x7a, 0x61,
	0x74, 0x72, 0x69, 0x62, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x52, 0x09, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x79, 0x22, 0x79, 0x0a, 0x08, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x74,
	0x12, 0x34, 0x0a, 0x09, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x69, 0x7a, 0x7a, 0x61, 0x74, 0x72, 0x69, 0x62, 0x65,
	0x73, 0x2e, 0x45, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x64, 0x75,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xa6,
	0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69,
	0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70, 0x69, 0x7a, 0x7a, 0x61,
	0x74, 0x72, 0x69, 0x62, 0x65, 0x73, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x52,
	0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x61, 0x7a, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x72, 0x61, 0x7a, 0x69, 0x6e, 0x67, 0x22, 0xbd, 0x01, 0x0a, 0x06, 0x54, 0x72, 0x61, 0x76,
	0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x5f, 0x61, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x41,
	0x74, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x58, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x58, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x59, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x72, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x68, 0x69, 0x65, 0x76,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x68, 0x69, 0x65, 0x76, 0x65,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x22, 0xd9, 0x01, 0x0a, 0x05, 0x4d, 0x6f, 0x75, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x45, 0x64, 0x75, 0x63, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x45, 0x64, 0x75,
	0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x73, 0x42, 0x65, 0x69, 0x6e, 0x67,
	0x45, 0x64, 0x75, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f,
	0x69, 0x73, 0x42, 0x65, 0x69, 0x6e, 0x67, 0x45, 0x64, 0x75, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x34, 0x0a, 0x09, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x69, 0x7a, 0x7a, 0x61, 0x74, 0x72, 0x69, 0x62, 0x65, 0x73,
	0x2e, 0x45, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x64, 0x75, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x65, 0x61, 0x72, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x69, 0x7a, 0x7a,
	0x61, 0x74, 0x72, 0x69, 0x62, 0x65, 0x73, 0x2e, 0x4d, 0x6f, 0x75, 0x73, 0x65, 0x41, 0x70, 0x70,
	0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x65, 0x61, 0x72, 0x61,
	0x6e, 0x63, 0x65, 0x22, 0x68, 0x0a, 0x0a, 0x51, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6c, 0x61, 0x69, 0x6d,
	0x65, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d,
	0x63, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0xfb, 0x09,
	0x0a, 0x09, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x09, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x70, 0x69, 0x7a, 0x7a, 0x61, 0x74, 0x72, 0x69, 0x62, 0x65, 0x73, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x04, 0x6c,
	0x6f, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x69, 0x7a, 0x7a,
	0x61, 0x74, 0x72, 0x69, 0x62, 0x65, 0x73, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x2e, 0x4c, 0x6f, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x6c, 0x6f, 0x74,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x3b, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x69, 0x7a, 0x7a, 0x61, 0x74, 0x72,
	0x69, 0x62, 0x65, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x0d, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x47, 0x0a, 0x11,
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x69, 0x7a, 0x7a, 0x61, 0x74,
	0x72, 0x69, 0x62, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x77, 0x6e, 0x58, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x77, 0x6e, 0x58, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x77, 0x6e, 0x59, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x77, 0x6e,
	0x59, 0x12, 0x35, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x69, 0x7a, 0x7a, 0x61, 0x74, 0x72,
	0x69, 0x62, 0x65, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x52, 0x0b, 0x74, 0x72, 0x61,
	0x76, 0x65, 0x6c, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1e, 0x2e,
	0x70, 0x69, 0x7a, 0x7a, 0x61, 0x74, 0x72, 0x69, 0x62, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x52, 0x0b, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x0d, 0x72, 0x65,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x51, 0x75, 0x65, 0x75, 0x65, 0x18, 0x0b, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x69, 0x7a, 0x7a, 0x61, 0x74, 0x72, 0x69, 0x62, 0x65, 0x73, 0x2e,
	0x4f, 0x6e, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x0d, 0x72, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x34,
	0x0a, 0x04, 0x6d, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70,
	0x69, 0x7a, 0x7a, 0x61, 0x74, 0x72, 0x69, 0x62, 0x65, 0x73, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x2e, 0x4d, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04,
	0x6d, 0x69, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x0d,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x69, 0x7a, 0x7a, 0x61, 0x74, 0x72, 0x69, 0x62,
	0x65, 0x73, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x12, 0x2c, 0x0a, 0x11, 0x61, 0x6d, 0x62, 0x61, 0x73, 0x73, 0x61, 0x64, 0x6f, 0x72, 0x4d, 0x6f,
	0x75, 0x73, 0x65, 0x49, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x6d, 0x62,
	0x61, 0x73, 0x73, 0x61, 0x64, 0x6f, 0x72, 0x4d, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x69, 0x7a, 0x7a, 0x61, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x70, 0x69, 0x7a, 0x7a, 0x61, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x67, 0x65, 0x6e, 0x69, 0x75, 0x73, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x67, 0x65, 0x6e, 0x69, 0x75, 0x73, 0x46, 0x6c, 0x61,
	0x73, 0x68, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x65, 0x61, 0x72, 0x61, 0x6e,
	0x63, 0x65, 0x50, 0x61, 0x72, 0x74, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x61,
	0x70, 0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x61, 0x72, 0x74, 0x73, 0x1a, 0x39,
	0x0a, 0x09, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x69, 0x6e,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x69, 0x7a, 0x7a, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x70, 0x69, 0x7a, 0x7a, 0x61, 0x73, 0x1a, 0x97, 0x01, 0x0a, 0x03, 0x4c, 0x6f,
	0x74, 0x12, 0x31, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70, 0x69, 0x7a, 0x7a, 0x61, 0x74, 0x72, 0x69, 0x62, 0x65,
	0x73, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x69, 0x6e, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x70, 0x70, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x61, 0x70, 0x70, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x70, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x61, 0x70, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6b, 0x1a, 0x53, 0x0a, 0x09, 0x4c, 0x6f, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x69, 0x7a, 0x7a, 0x61, 0x74, 0x72, 0x69, 0x62, 0x65, 0x73, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x4c, 0x6f, 0x74, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x4b, 0x0a, 0x09, 0x4d, 0x69, 0x63, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x69, 0x7a, 0x7a, 0x61, 0x74, 0x72,
	0x69, 0x62, 0x65, 0x73, 0x2e, 0x4d, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x52, 0x0a, 0x0b, 0x51, 0x75, 0x65, 0x73, 0x74, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x69, 0x7a, 0x7a, 0x61, 0x74, 0x72, 0x69,
	0x62, 0x65, 0x73, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x52,
	0x0a, 0x70, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x21, 0x0a, 0x09, 0x50,
	0x61, 0x74, 0x63, 0x68, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x68,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x22, 0x7c,
	0x0a, 0x0e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50, 0x61, 0x74, 0x63, 0x68,
	0x12, 0x34, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x69, 0x7a, 0x7a, 0x61, 0x74, 0x72, 0x69, 0x62, 0x65,
	0x73, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x09, 0x67, 0x61, 0x6d,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x70, 0x61, 0x74, 0x63, 0x68, 0x4d,
	0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x69, 0x7a, 0x7a,
	0x61, 0x74, 0x72, 0x69, 0x62, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x61, 0x73,
	0x6b, 0x52, 0x09, 0x70, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x61, 0x73, 0x6b, 0x42, 0x35, 0x5a, 0x33,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x6e, 0x61, 0x74, 0x74,
	0x65, 0x2f, 0x70, 0x69, 0x7a, 0x7a, 0x61, 0x2d, 0x74, 0x72, 0x69, 0x62, 0x65, 0x73, 0x2f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gamestate_proto_rawDescOnce sync.Once
	file_gamestate_proto_rawDescData = file_gamestate_proto_rawDesc
)

func file_gamestate_proto_rawDescGZIP() []byte {
	file_gamestate_proto_rawDescOnce.Do(func() {
		file_gamestate_proto_rawDescData = protoimpl.X.CompressGZIP(file_gamestate_proto_rawDescData)
	})
	return file_gamestate_proto_rawDescData
}

var file_gamestate_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_gamestate_proto_goTypes = []interface{}{
	(*OngoingResearch)(nil),     // 0: pizzatribes.OngoingResearch
	(*Training)(nil),            // 1: pizzatribes.Training
	(*Construction)(nil),        // 2: pizzatribes.Construction
	(*Travel)(nil),              // 3: pizzatribes.Travel
	(*Mouse)(nil),               // 4: pizzatribes.Mouse
	(*QuestState)(nil),          // 5: pizzatribes.QuestState
	(*GameState)(nil),           // 6: pizzatribes.GameState
	(*PatchMask)(nil),           // 7: pizzatribes.PatchMask
	(*GameStatePatch)(nil),      // 8: pizzatribes.GameStatePatch
	(*GameState_Resources)(nil), // 9: pizzatribes.GameState.Resources
	(*GameState_Lot)(nil),       // 10: pizzatribes.GameState.Lot
	nil,                         // 11: pizzatribes.GameState.LotsEntry
	nil,                         // 12: pizzatribes.GameState.MiceEntry
	nil,                         // 13: pizzatribes.GameState.QuestsEntry
	(ResearchDiscovery)(0),      // 14: pizzatribes.ResearchDiscovery
	(Education)(0),              // 15: pizzatribes.Education
	(Building)(0),               // 16: pizzatribes.Building
	(*MouseAppearance)(nil),     // 17: pizzatribes.MouseAppearance
}
var file_gamestate_proto_depIdxs = []int32{
	14, // 0: pizzatribes.OngoingResearch.discovery:type_name -> pizzatribes.ResearchDiscovery
	15, // 1: pizzatribes.Training.education:type_name -> pizzatribes.Education
	16, // 2: pizzatribes.Construction.building:type_name -> pizzatribes.Building
	15, // 3: pizzatribes.Mouse.education:type_name -> pizzatribes.Education
	17, // 4: pizzatribes.Mouse.appearance:type_name -> pizzatribes.MouseAppearance
	9,  // 5: pizzatribes.GameState.resources:type_name -> pizzatribes.GameState.Resources
	11, // 6: pizzatribes.GameState.lots:type_name -> pizzatribes.GameState.LotsEntry
	1,  // 7: pizzatribes.GameState.trainingQueue:type_name -> pizzatribes.Training
	2,  // 8: pizzatribes.GameState.constructionQueue:type_name -> pizzatribes.Construction
	3,  // 9: pizzatribes.GameState.travelQueue:type_name -> pizzatribes.Travel
	14, // 10: pizzatribes.GameState.discoveries:type_name -> pizzatribes.ResearchDiscovery
	0,  // 11: pizzatribes.GameState.researchQueue:type_name -> pizzatribes.OngoingResearch
	12, // 12: pizzatribes.GameState.mice:type_name -> pizzatribes.GameState.MiceEntry
	13, // 13: pizzatribes.GameState.quests:type_name -> pizzatribes.GameState.QuestsEntry
	6,  // 14: pizzatribes.GameStatePatch.gameState:type_name -> pizzatribes.GameState
	7,  // 15: pizzatribes.GameStatePatch.patchMask:type_name -> pizzatribes.PatchMask
	16, // 16: pizzatribes.GameState.Lot.building:type_name -> pizzatribes.Building
	10, // 17: pizzatribes.GameState.LotsEntry.value:type_name -> pizzatribes.GameState.Lot
	4,  // 18: pizzatribes.GameState.MiceEntry.value:type_name -> pizzatribes.Mouse
	5,  // 19: pizzatribes.GameState.QuestsEntry.value:type_name -> pizzatribes.QuestState
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_gamestate_proto_init() }
func file_gamestate_proto_init() {
	if File_gamestate_proto != nil {
		return
	}
	file_education_proto_init()
	file_building_proto_init()
	file_research_proto_init()
	file_appearance_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_gamestate_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OngoingResearch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamestate_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Training); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamestate_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Construction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamestate_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Travel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamestate_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mouse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamestate_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamestate_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamestate_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchMask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamestate_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameStatePatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamestate_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameState_Resources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamestate_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameState_Lot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gamestate_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gamestate_proto_goTypes,
		DependencyIndexes: file_gamestate_proto_depIdxs,
		MessageInfos:      file_gamestate_proto_msgTypes,
	}.Build()
	File_gamestate_proto = out.File
	file_gamestate_proto_rawDesc = nil
	file_gamestate_proto_goTypes = nil
	file_gamestate_proto_depIdxs = nil
}
